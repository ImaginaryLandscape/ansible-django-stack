---

- include: install_facts.yml
  when: postgres__install_facts

- include: base-debian.yml
  when: ansible_os_family == 'Debian'
  tags:
    - packages
    - debian-base

- debug: msg="Vars path {{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"

- include_vars: "{{ item }}"
  with_first_found:
   - "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
   - "{{ ansible_distribution }}.yml"
   - "{{ ansible_os_family }}.yml"
   - "default.yml"

# Create our config
- name: Create postgresql.conf from template
  template: >
    src="postgresql.conf.j2"
    dest="/etc/postgresql/{{postgres__version}}/main/postgresql.conf"
    owner=postgres group=postgres mode=0644
  notify: restart postgresql

- name: ensure postgres is enabled at boot
  service: name=postgresql enabled={{postgres__enabled_on_startup}}

- name: Create database User
  become_user: postgres
  postgresql_user:
    name={{ postgres__db_user }}
    password={{ postgres__db_password }}

- name: Create database
  become_user: postgres
  postgresql_db:
    name={{ postgres__db_name }}
    owner={{ postgres__db_user }}
    encoding='UTF-8'
    lc_collate='en_US.UTF-8'
    lc_ctype='en_US.UTF-8'
    state=present

- name: ensure user does not have unnecessary privilege
  become_user: postgres
  postgresql_user:
    name={{postgres__db_user}}
    role_attr_flags=NOSUPERUSER,NOCREATEDB
